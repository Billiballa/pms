# local:http://localhost:81/docs/swagger?url=http://localhost:81/docs/swagger.yml
# remote:https://dxcchina.github.io/pms/swagger?url=https://dxcchina.github.io/pms/swagger.yml
swagger: "2.0"

info:
  title: "pms api"
  version: "1.0"
basePath: "/api"
paths:

# user
  /user:
    post:
      summary: 注册
      operationId: controller.user.reg
      responses:
        200:
          description: ok
    get:
      summary: api
      operationId: controller.user.user_info
      responses:
        200:
          description: ok
    put:
      summary: api
      operationId: controller.user.user_update
      responses:
        200:
          description: ok
  /password:
    put:
      summary: api
      operationId: controller.user.change_password
      responses:
        200:
          description: ok
  /logout:
    get:
      summary: api
      operationId: controller.user.logout
      responses:
        200:
          description: ok
  /login:
    post:
      summary: 用户登录
      operationId: controller.user.login
      parameters:
        - name: login
          in: body
          description: 用户登录信息
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        200:
          description: ok

# 项目
  /project:
    get:
      summary: 获取项目列表
      operationId: controller.info.project_list
      responses:
        200:
          description: ok
    post:
      summary: 创建项目
      operationId: controller.info.project_add
      responses:
        200:
          description: ok
  /project/{project_id}:
    get:
      summary: api
      operationId: controller.project.project_info
      parameters:
        - name: project_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
    put:
      summary: 项目信息更新
      operationId: controller.project.project_update
      parameters:
        - name: project_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok

# 项目成员
  /project/{project_id}/user:
    get:
      summary: 查询项目所有成员
      operationId: controller.project.project_user
      parameters:
        - name: project_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  /project/member:
    get:
      summary: 模糊查询成员
      operationId: controller.project.fuzzy_query_member
      parameters:
        - name: name
          in: query
          required: true
          type: string
      responses:
        200:
          description: ok
    post:
      summary: 添加项目成员
      operationId: controller.project.project_member_add
      responses:
        200:
          description: ok
    delete:
      summary: 删除项目成员
      operationId: controller.project.project_member_delete
      parameters:
        - name: id
          in: query
          required: true
          type: integer
      responses:
        200:
          description: ok

# release
  # /release:
  #   get:
  #     summary: 获取项目Release
  #     operationId: controller.info.project_list
  #     responses:
  #       200:
  #         description: ok
  #   post:
  #     summary: 创建Release
  #     operationId: controller.info.project_add
  #     responses:
  #       200:
  #         description: ok

# dashboard     
  /dashboard/{release_id}/demand:
    get:
      summary: 获取项目需求
      operationId: controller.dashboard.project_demand
      parameters:
        - name: release_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  /dashboard/{release_id}/activity:
    get:
      summary: 获取项目活动
      operationId: controller.dashboard.project_activity
      parameters:
        - name: release_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  /dashboard/{release_id}/testCase:
    get:
      summary: 获取项目测试案例
      operationId: controller.dashboard.project_test_case
      parameters:
        - name: release_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  /dashboard/{release_id}/testResult:
    get:
      summary: 获取项目测试结果
      operationId: controller.dashboard.project_test_result
      parameters:
        - name: release_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  # /dashboard/{release_id}/testSet:
  #   get:
  #     summary: 获取项目测试集
  #     operationId: controller.dashboard.project_test_set
  #     parameters:
  #       - name: release_id
  #         in: path
  #         required: true
  #         type: integer
  #     responses:
  #       200:
  #         description: ok

# testSet


# case
  /project/case:
    post:
      summary: api
      operationId: controller.case.case_add
      responses:
        200:
          description: ok
    put:
      summary: api
      operationId: controller.case.case_update
      responses:
        200:
          description: ok
  /project/case/detail/{case_id}:
    get:
      summary: api
      operationId: controller.case.case_detail
      parameters:
        - name: case_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok

# result 
  /testResult:
    get:
      summary: 查询测试结果
      operationId: controller.testResult.search_test_result
      parameters:
        - name: testResultId
          in: query
          required: true
          type: integer
      responses:
        200:
          description: ok
    post:
      summary: 创建项目测试结果
      operationId: controller.testResult.add_test_result
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: testResult
          in: body
          description: 测试结果初始信息
          required: true
          schema:
            $ref: '#/definitions/TestResultInit'
      responses:
        200:
          description: 测试结果创建成功
    put:
      summary: 更新项目测试结果
      operationId: controller.testResult.update_test_result
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: testResult
          in: body
          description: 更新测试结果信息
          required: true
          schema:
            $ref: '#/definitions/TestResultUpdate'
      responses:
        200:
          description: 测试结果更新成功

# demand
  /project/demand:
    get:
      summary: 查询需求
      operationId: controller.activity.demand_search
      parameters:
        - name: title
          in: query
          required: true
          type: string
        - name: projectId
          in: query
          required: true
          type: integer
      responses:
        200:
          description: ok
    post:
      summary: api
      operationId: controller.demand.demand_add
      responses:
        200:
          description: ok
  /project/demand/detail/{demand_id}:
    get:
      summary: api
      operationId: controller.demand.demand_info
      parameters:
        - name: demand_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok
  /project/demand/update:
    put:
      summary: api
      operationId: controller.demand.demand_update
      responses:
        200:
          description: ok
  /demand/{demand_title}:
    get:
      summary: api
      operationId: controller.task.demand_search
      parameters:
        - name: demand_title
          in: path
          required: true
          type: string
      responses:
        200:
          description: ok
  /demand/list:
    get:
      summary: api
      operationId: controller.task.demand_lists
      responses:
        200:
          description: ok
  /project/demand/{title}:
    get:
      summary: api
      operationId: controller.demand.find_demand_list_match_str

      parameters:
        - name: title
          in: path
          required: true
          type: string
      responses:
        200:
          description: ok

# activity
  /activity:
    get:
      summary: 项目活动列表
      operationId: controller.activity.activity_list
      parameters:
        - name: projectId
          in: query
          required: true
          type: integer
      responses:
        200:
          description: ok
    post:
      summary: 创建项目活动
      operationId: controller.activity.activity_add
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: activity
          in: body
          description: 活动初始信息
          required: true
          schema:
            $ref: '#/definitions/ActivityInit'
      responses:
        200:
          description: 活动创建成功
    put:
      summary: 更新项目活动
      operationId: controller.activity.activity_update
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - name: activity
          in: body
          description: 更新活动信息
          required: true
          schema:
            $ref: '#/definitions/Activity'
      responses:
        200:
          description: 活动更新成功
  /activity/{activity_id}:
    get:
      summary: 项目活动详情
      operationId: controller.activity.activity_detail
      parameters:
        - name: activity_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: ok

definitions:
  Login:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  ActivityInit:
    type: object
    properties:
      title:
        type: string
      projectId:
        type: integer
      detail:
        type: string
      progress:
        type: integer
      cost:
        type: string
      status:
        type: string
      memberId:
        type: array
        items:
          type: integer
      demand:
        type: array
        items:
          type: integer
    required:
    - title
    - projectId
  Activity:
    type: object
    properties:
      projectId:
        type: integer
      activityId:
        type: integer
      title:
        type: string
      del_demand:
        type: array
        items:
          type: integer
      done_demand:
        type: array
        items:
          type: integer
      del_memberId:
        type: array
        items:
          type: integer
      demand:
        type: array
        items:
          type: integer
      memberId:
        type: array
        items:
          type: integer
      detail:
        type: string
      progress:
        type: integer
      cost:
        type: string
      status:
        type: string
    required:
    - title
  TestResultInit:
    type: object
    properties:
      name:
        type: string
      detail:
        type: string
      caseId:
        type: integer
      output:
        type: string
      status:
        type: string
      level:
        type: string
      priority:
        type: string
    required:
    - name
    - detail
    - caseId
    - output
    - status
    - level
    - priority
  TestResultUpdate:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      detail:
        type: string
      output:
        type: string
      status:
        type: string
      level:
        type: string
      priority:
        type: string
    required:
    - id
    - name
    - detail
    - output
    - status
    - level
    - priority
